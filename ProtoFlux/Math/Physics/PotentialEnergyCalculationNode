using Elements.Core;
using ProtoFlux.Core;
using ProtoFlux.Runtimes.Execution;
using System;

namespace ProtoFlux.Runtimes.Execution.Nodes.Obsidian.Math.Physics
{
    [NodeCategory("Obsidian/Math/Physics")]
    public class PotentialEnergyCalculationNode : ValueFunctionNode<ExecutionContext, float>
    {
        public ValueInput<float> Mass;
        public ValueInput<float> Height;

        protected override float Compute(ExecutionContext context)
        {
            try
            {
                float mass = Mass.Evaluate(context);
                float height = Height.Evaluate(context);

                float potentialEnergy = mass * Constants.G * height;

                return potentialEnergy;
            }
            catch (Exception ex)
            {
                // Log any exceptions without throwing them
                UniLog.Log($"Error in PotentialEnergyCalculationNode.Compute: {ex.Message}");
            }

            return 0.0f; // Return a default value in case of an error
        }
    }
}
